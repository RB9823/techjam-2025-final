version: '3.8'

services:
  # FastAPI Backend
  backend:
    build:
      context: .
      target: production
    ports:
      - "8000:8000"
    environment:
      - DEBUG=false
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - hf_cache:/app/.hf_cache
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G

  # Redis for caching and background tasks
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Background task worker (optional)
  worker:
    build:
      context: .
      target: production
    environment:
      - DEBUG=false
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - hf_cache:/app/.hf_cache
    depends_on:
      - redis
    restart: unless-stopped
    command: celery -A app.worker worker --loglevel=info
    deploy:
      resources:
        limits:
          memory: 6G
        reservations:
          memory: 3G

  # Task monitor (optional)
  flower:
    build:
      context: .
      target: production
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    command: celery -A app.worker flower --port=5555

volumes:
  redis_data:
  hf_cache: